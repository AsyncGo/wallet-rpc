server.port=7003
spring.application.name=service-rpc-eth
#kafka
# \u6307\u5B9Akafka \u4EE3\u7406\u5730\u5740\uFF0C\u53EF\u4EE5\u591A\u4E2A
spring.kafka.bootstrap-servers=@kafka.servers.url@
# \u6307\u5B9A\u9ED8\u8BA4\u6D88\u8D39\u8005group id
spring.kafka.consumer.group-id=default-group
# \u6307\u5B9A\u9ED8\u8BA4topic id
spring.kafka.template.default-topic=test
# \u6307\u5B9Alistener \u5BB9\u5668\u4E2D\u7684\u7EBF\u7A0B\u6570\uFF0C\u7528\u4E8E\u63D0\u9AD8\u5E76\u53D1\u91CF
spring.kafka.listener.concurrency=1
# \u6BCF\u6B21\u6279\u91CF\u53D1\u9001\u6D88\u606F\u7684\u6570\u91CF
spring.kafka.producer.batch-size=1000
# mongodb
spring.data.mongodb.uri=@spring.data.mongodb.uri@
eureka.client.serviceUrl.defaultZone=@eureka.client.serviceUrl@
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=10
eureka.client.healthcheck.enable=true
eureka.instance.hostname=@eureka.client.ip@
#\u8BBE\u7F6E\u5B9E\u4F8B\u7684ID\u4E3Aip:port
eureka.instance.instance-id=@eureka.client.ip@:${server.port}

#\u5E01\u79CD\u914D\u7F6E
coin.rpc=@eth.coin.rpc@
coin.name=ETH
coin.unit=ETH
coin.keystore-path=@coin.keystore-path@
# \u521B\u5EFA\u90E8\u7F72\u9879\u76EE\u65F6 \u8BF7\u5C06\u521D\u59CB\u533A\u5757 \u4FEE\u6539\u4E3A \u8F83\u65B0\u7684\u533A\u5757\u9AD8\u5EA6 (\u91CD\u8981)
coin.init-block-height=@eth.init-block-height@
coin.step=10
coin.withdraw-wallet=@coin.withdraw-wallet@
coin.withdraw-wallet-password=yang1990
coin.gas-limit=40000
coin.min-collect-amount=0.001
#\u603B\u8D26\u6237\u662F\u8F6C\u51FA\u5730\u5740\uFF0C\u56DE\u8C03\u5FFD\u7565
coin.ignore-from-address=@coin.withdraw-wallet@
swagger.enable=true
#AES\u52A0\u5BC6\u5BC6\u94A5
aes.key=@aes.key@
#datasource
spring.datasource.url=@datasource.url@
spring.datasource.username=@datasource.username@
spring.datasource.password=@datasource.password@
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=200
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
logging.level.com.ztuo.bc.wallet.mapper=@sql.logging.level@

spring.redis.database=@redis.database@
spring.redis.host=@redis.hostName@
#spring.redis.port=@redis.port@
spring.redis.password=@redis.password@
spring.data.redis.repositories.enabled=false

#watch\u7684\u521D\u59CB\u5316\u8BBE\u7F6E
#\u6570\u636E\u5E93\u5982\u8BB0\u5F55\uFF0C\u521D\u59CB\u5316\u533A\u5757\u7684\u9AD8\u5EA6
watcher.init-block-height=latest
#\u8BBE\u7F6E\u6BCF\u6B21\u540C\u6B65\u533A\u5757\u6570\u91CF
watcher.step=20
#\u533A\u5757\u786E\u8BA4\u6570
watcher.confirmation=6
#\u8BBE\u7F6E\u540C\u6B65\u95F4\u9694\u65F6\u95F4(\u6BEB\u79D2)
watcher.interval=60000
#\u73AF\u5883(test/prod)
rpc.environment.istest=@rpc.environment.istest@