#\u73AF\u5883(test/prod)
rpc.environment.istest=@rpc.environment.istest@

server.port=7001
spring.application.name=service-rpc-btc
#kafka
# \u6307\u5B9Akafka \u4EE3\u7406\u5730\u5740\uFF0C\u53EF\u4EE5\u591A\u4E2A
spring.kafka.bootstrap-servers=@kafka.servers.url@
# \u6307\u5B9A\u9ED8\u8BA4\u6D88\u8D39\u8005group id
spring.kafka.consumer.group-id=default-group
# \u6307\u5B9A\u9ED8\u8BA4topic id
spring.kafka.template.default-topic=test
# \u6307\u5B9Alistener \u5BB9\u5668\u4E2D\u7684\u7EBF\u7A0B\u6570\uFF0C\u7528\u4E8E\u63D0\u9AD8\u5E76\u53D1\u91CF
spring.kafka.listener.concurrency=3
# \u6BCF\u6B21\u6279\u91CF\u53D1\u9001\u6D88\u606F\u7684\u6570\u91CF
spring.kafka.producer.batch-size=1000

# \u91CD\u4F20\u6B21\u6570
spring.kafka.producer.retries=0
# \u6BCF\u6B21\u6279\u5904\u7406\u7684\u5927\u5C0F
spring.kafka.producer.batch.size=256
#linger\u6307\u5B9A\u7684\u65F6\u95F4\u7B49\u5F85\u66F4\u591A\u7684records\u51FA\u73B0
spring.kafka.producer.linger=1
# \u7F13\u5B58\u6570\u636E\u7684\u5185\u5B58\u5927\u5C0F
spring.kafka.producer.buffer.memory=1048576
spring.kafka.consumer.enable.auto.commit=false
spring.kafka.consumer.session.timeout=15000
spring.kafka.consumer.auto.commit.interval=100
spring.kafka.consumer.auto.offset.reset=earliest
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.consumer.concurrency=9
spring.kafka.consumer.maxPollRecordsConfig=50
spring.kafka.consumer.group.id=default-group

# mongodb
spring.data.mongodb.uri=@spring.data.mongodb.uri@
#spring.data.mongodb.database=ztuo_wallet_rpc
#spring.data.mongodb.host=@spring.data.mongodb.host@
#spring.data.mongodb.port=27017
#spring.data.mongodb.username=@spring.data.mongodb.username@
#spring.data.mongodb.password=@spring.data.mongodb.password@


spring.redis.database=@redis.database@
spring.redis.host=@redis.hostName@
#spring.redis.port=@redis.port@
spring.redis.password=@redis.password@
spring.data.redis.repositories.enabled=false

eureka.client.serviceUrl.defaultZone=@eureka.client.serviceUrl@
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=10
eureka.client.healthcheck.enable=true
eureka.instance.hostname=@eureka.client.ip@
#\u8BBE\u7F6E\u5B9E\u4F8B\u7684ID\u4E3Aip:port
eureka.instance.instance-id=@eureka.client.ip@:${server.port}

coin.rpc=@btc.coin.rpc@
coin.name=Bitcoin
coin.unit=BTC
#coin.charge-address=@coin.btc.charge-address@
#\u4F4E\u4E8E\u5FAE\u5C18\u4EA4\u6613\uFF0C\u4E0D\u4F7F\u7528\u6B64uxto
coin.min-spent-amount=0.00000546
#\u6BCF\u6B21\u7ED9USDT\u5730\u5740\u5145\u503C\u7684btc\u6570\u91CF
coin.recharge-miner-fee=@btc.recharge.miner.fee@

#watch\u7684\u521D\u59CB\u5316\u8BBE\u7F6E
#\u6570\u636E\u5E93\u5982\u8BB0\u5F55\uFF0C\u521D\u59CB\u5316\u533A\u5757\u7684\u9AD8\u5EA6
watcher.init-block-height=latset
#\u8BBE\u7F6E\u6BCF\u6B21\u540C\u6B65\u533A\u5757\u6570\u91CF
watcher.step=1
#\u533A\u5757\u786E\u8BA4\u6570
watcher.confirmation=1
#\u8BBE\u7F6E\u540C\u6B65\u95F4\u9694\u65F6\u95F4(\u6BEB\u79D2)
watcher.interval=60000

#AES\u52A0\u5BC6\u5BC6\u94A5
aes.key=@aes.key@
#datasource
spring.datasource.url=@datasource.url@
spring.datasource.username=@datasource.username@
spring.datasource.password=@datasource.password@
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=200
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j


#logging.level.root= info
logging.level.com.ztuo.bc.wallet.mapper= debug
logging.level.com.ztuo.bc.wallet.mapperextend= debug


#\u5E76\u53D1\u6267\u884C\u7684\u6700\u5927\u7EBF\u7A0B\u6570\uFF0C\u9ED8\u8BA410
hystrix.threadpool.default.coreSize= 500
hystrix.threadpool.command.paas-file.execution.isolation.thread.timeoutInMilliseconds= 3600000
#\u547D\u4EE4\u6267\u884C\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA41000ms
hystrix.threadpool.command.default.execution.isolation.thread.timeoutInMilliseconds= 8000

#\u5F00\u542F\u70ED\u90E8\u7F72
spring.devtools.restart.enabled=true